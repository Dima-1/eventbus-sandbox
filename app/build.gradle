apply plugin: 'com.android.application'
apply plugin: 'jacoco'

def unitTest='testQaDebugUnitTest'
def coverageReport='createQaDebugCoverageReport'
task jacocoTestReport(type: JacocoReport, dependsOn: [unitTest,coverageReport ]) {

    jacoco {
        // after updating to the Android Gradle plugin 3.0.0
        // error Unable to read execution data file
        // in project-level: classpath 'org.jacoco:org.jacoco.core:0.7.9'
        toolVersion '0.7.9'

    }
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.example.user.eventest"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":"$projectDir/schemas".toString()]
            }
        }
    }

    buildToolsVersion '27.0.3'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }

    flavorDimensions "default"
    productFlavors {
        qa {
            resValue "string", "app_name", "Memos-qa"
            applicationIdSuffix ".qa"
            versionCode 1
            versionName "1.0"
            versionNameSuffix "-qa"
        }
        prod{
            resValue "string", "app_name", "Memos"
        }
    }
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'android.arch.persistence.room:runtime:1.0.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    annotationProcessor 'android.arch.persistence.room:compiler:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'android.arch.persistence.room:testing:1.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.1'
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
}
